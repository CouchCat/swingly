// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar component should render the Sidebar component 1`] = `
<Fragment>
  <Backdrop
    data-testid="backdrop"
    isOpen={true}
    onClick={[Function]}
  />
  <SidebarContainer
    data-testid="sidebar-container"
    isOpen={true}
  >
    <SidebarHeader>
      Navigation
    </SidebarHeader>
    <SidebarButton
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      isactive="true"
      onClick={[Function]}
      to="/"
    >
      <FontAwesomeIcon
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon="calendar-week"
        inverse={false}
        listItem={false}
        mask={null}
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        swapOpacity={false}
        symbol={false}
        title=""
        transform={null}
      />
      All Events
    </SidebarButton>
    <SidebarButton
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      data-testid="create-event"
      isactive="false"
      onClick={[Function]}
      to="/event-create"
    >
      <FontAwesomeIcon
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon="calendar-plus"
        inverse={false}
        listItem={false}
        mask={null}
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        swapOpacity={false}
        symbol={false}
        title=""
        transform={null}
      />
      Create Event
    </SidebarButton>
    <SidebarButton
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      isactive="false"
      onClick={[Function]}
      to="/users"
    >
      <FontAwesomeIcon
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon="users"
        inverse={false}
        listItem={false}
        mask={null}
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        swapOpacity={false}
        symbol={false}
        title=""
        transform={null}
      />
      Users
    </SidebarButton>
    <SidebarButton
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      isactive="false"
      onClick={[Function]}
      to="/about"
    >
      <FontAwesomeIcon
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon="info-circle"
        inverse={false}
        listItem={false}
        mask={null}
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        swapOpacity={false}
        symbol={false}
        title=""
        transform={null}
      />
      About
    </SidebarButton>
    <SidebarButton
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      onClick={[Function]}
      to="/error"
    >
      <FontAwesomeIcon
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon="exclamation-triangle"
        inverse={false}
        listItem={false}
        mask={null}
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        swapOpacity={false}
        symbol={false}
        title=""
        transform={null}
      />
      Error Page
    </SidebarButton>
    <SidebarButton
      flat={true}
      onClick={[Function]}
      transparent={true}
    >
      <FontAwesomeIcon
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon="moon"
        inverse={false}
        listItem={false}
        mask={null}
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        swapOpacity={false}
        symbol={false}
        title=""
        transform={null}
      />
      Dark Mode
    </SidebarButton>
  </SidebarContainer>
</Fragment>
`;
